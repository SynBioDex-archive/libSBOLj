Welcome to BioJava.

BioJava is an open-source initiative with the aim of providing the
biological community with objects for representing and manipulating
biological information. We hope that it becomes the one-stop solution for
every-day biological programming.

This distribution contains the BioJava classes and resources, along with
scripts for building the .class files and the documentation tree. The CVS
directories are arranged as follows:

biojava-live
 |
 |- apps : Java source files for user applications
 |
 |- demos : a selection of demo programs
 |
 |- demos-obsolete : demo programs for deperecated API
 |
 |- docs : documentation
 |
 |- dtd : dtd's relevant to Blast parsing
 |
 |- manifest : manifest file for building jars
 |
 |- reports : reports (currently test logs, this is not included in the 
 |               distirubtion but is autogenerated when you run JUnit)
 |
 |- resources : resource files - images, xml documents
 |
 |- src : Java source files and package documentation
 |
 |- selfSignedCertificate : key required for self-signing of biojava.jar
 |
 |- taglets : Custom javadoc taglets for biojava
 |
 |- tests : Java unit test source files
 |

BioJava requires Java >= 1.5 to build. 
  
BioJava uses the CLI component of the Jakarta Commons project for its
user application components.  We currently include CLI 1.0 in the
source tree. For more information, see:

  http://jakarta.apache.org/

BioJava uses the DBCP, Pool & Collections components of the Jakarta Commons project for its
database connection pooling components.  The current versions included in the CVS are DBCP 1.1
, Pool 1.1 and Collections 2.1.  For more information, see:

  http://jakarta.apache.org/
	
BioJava now uses the Java based build tool Ant, supplied by the Apache
Jakarta Project (see http://ant.apache.org/). To build the project,
change to biojava-live and type:

  ant clean;
  ant ;
  ant javadocs-biojava;

If you have Ant >= 1.3 and the Java based unit testing tool JUnit (see
http://www.junit.org) you can run the supplied tests. To build and run
the tests, change directory to biojava-live and type:

ant runtests

To check for edits type:

> cvs update
and then for each directory under src with at least one modified file, build
the package.

To use biojava, put biojava.jar, bytecode.jar, jgrapht-jdk1.5.jar and commons-cli.jar into your
classpath.


To sign biojava.jar using a self signed certificate do:

ant sign

to verify that a biojava.jar has a valid signature do:

jarsigner -verify biojava.jar



BioJava uses Ant to build the demos. To build the demos, change
directory to biojava-live and type:

ant compile-demos

To run the demos change directory to demos. Most have either a comment
explaining their purpose, or will print out a usage message when run
without arguments.

Mail the BioJava mailing list (biojava-l@biojava.org) for more details.
For more techical discussion use biojava-dev@biojava.org



     This product includes software developed by the
     Apache Software Foundation (http://www.apache.org/).
